name: "ðŸš€ Release: Plugin version"

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release-please:
    if: github.event_name != 'workflow_dispatch'
    runs-on: ubuntu-latest
    timeout-minutes: 4

    outputs:
      release-created: ${{ steps.release.outputs.releases_created }}
      release-tag: ${{ steps.release.outputs.tag_name }}

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - uses: googleapis/release-please-action@16a9c90856f42705d54a6fda1823352bdc62cf38
        id: release
        with:
          config-file: .release-please/config.json
          manifest-file: .release-please/manifest.json

          # NOTE: If you want 'release-please' PRs to trigger CI/CD workflows,
          # then a PAT is required. This PAT must have 'contents:write' and
          # 'pull_requests:write'.
          token: ${{ secrets.RELEASE_PLEASE_TOKEN || github.token }}

          # NOTE: To handle releases on specific branches (e.g. a '1.X' release branch),
          # simply change the "branches" filter in the workflow's on-"push" trigger.
          target-branch: ${{ github.ref_name }}

      - name: Log release-please action output
        shell: bash
        env:
          # See https://github.com/actions/runner/issues/1656#issuecomment-1030077729.
          RELEASE_INFO: ${{ toJson(steps.release.outputs) }}
        run: echo $RELEASE_INFO

  release-branch:
    needs: ["release-please"]
    if: |
      !failure() && !cancelled() && (
        needs.release-please.outputs.release-created == 'true' ||
        github.event_name == 'workflow_dispatch'
      )

    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          submodules: true

      - uses: coffeebeats/godot-infra/.github/actions/parse-godot-version@v2
        id: version
        with:
          gdenv-pin-path: .godot-version

      - name: Determine plugin name
        id: subfolder
        shell: bash
        run: echo name="$(echo ${{ github.repository }} | sed -E 's/^${{ github.repository_owner }}\/godot-plugin-//')" >> $GITHUB_OUTPUT

      - uses: coffeebeats/godot-infra/package-addon@v2
        with:
          subfolder: ${{ steps.subfolder.outputs.name }}
          target-branch: "godot-v${{ steps.version.outputs.major-minor }}"
          godot-editor-version: "v${{ steps.version.outputs.semantic }}"
          file-excludes: |
            **/*_test.gd
