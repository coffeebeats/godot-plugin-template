name: "Set up 'gdenv'"
description: "Install the specified version of 'gdenv'."

inputs:
  version:
    description: "The version of 'gdenv' to install."
    required: true
  install-dir:
    description: "The 'gdenv' installation directory."
    required: false
    default: "~/.gdenv"
  modify-path:
    description: "Whether to add the 'gdenv' command to 'PATH'."
    required: false
    default: true

runs:
  using: "composite"
  steps:
    - name: Cache the 'gdenv' home directory
      id: cache-gdenv
      uses: actions/cache@v4
      with:
        key: gdenv-${{ runner.os }}-${{ inputs.version }}
        path: ${{ inputs.install-dir }}
    
    - name: Export the 'GDENV_HOME' environment variable
      shell: bash
      run: export GDENV_HOME="${{ inputs.install-dir }}"

    # See https://github.com/coffeebeats/gdenv/blob/main/docs/installation.md#linuxmacos.
    - name: Install 'gdenv' (latest)
      if: steps.cache-gdenv.outputs.cache-hit != 'true' && inputs.version == 'latest'
      shell: bash
      run: |
        curl https://raw.githubusercontent.com/coffeebeats/gdenv/main/scripts/install.sh | sh -s -- --no-modify-path

    # See https://github.com/coffeebeats/gdenv/blob/main/docs/installation.md#manual-download.
    - name: Install 'gdenv'
      if: steps.cache-gdenv.outputs.cache-hit != 'true' && inputs.version != 'latest'
      shell: bash
      run: |
        ARCH=x86_64
        OS="$(echo "$(uname -s)" | tr '[:upper:]' '[:lower:]')"
        VERSION="$(echo "${{ inputs.version }}" | sed 's/^v//')"

        curl -LO "https://github.com/coffeebeats/gdenv/releases/download/v${VERSION#v}/gdenv-$VERSION-$OS-$ARCH.tar.gz"

        mkdir -p $GDENV_HOME/bin && \
        tar -C $GDENV_HOME/bin -xf gdenv-$VERSION-$OS-$ARCH.tar.gz
    
    - name: Update the 'PATH' environment variable
      if: inputs.modify-path == 'true'
      shell: bash
      run: |
        export GDENV_HOME="$HOME/.gdenv"
        export PATH="$GDENV_HOME/bin:$PATH"

    - name: Validate that the 'gdenv' executable was installed
      shell: bash
      run: |
        if command -v gdenv [[ "$(${{ inputs.install-dir }}/bin/gdenv --version)" != "gdenv ${{ inputs.version }}" ]]; then
          echo "Failed to install 'gdenv@v${{ inputs.version }}'!"
          exit 1
        fi
